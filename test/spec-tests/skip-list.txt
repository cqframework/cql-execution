# Invalid CQL (does not translate)

CqlTypesTest.Time.TimeUpperBoundHours               Translation Error: Invalid time input (T24:59:59.999). Use ISO 8601 time representation (hh:mm:ss.fff).
CqlTypesTest.Time.TimeUpperBoundMinutes             Translation Error: Invalid time input (T23:60:59.999). Use ISO 8601 time representation (hh:mm:ss.fff).
CqlTypesTest.Time.TimeUpperBoundSeconds             Translation Error: Invalid time input (T23:59:60.999). Use ISO 8601 time representation (hh:mm:ss.fff).
"CqlDateTimeOperatorsTest.Uncertainty tests.TimeDurationBetweenHourDiffPrecision" Translation Error: Syntax error at Z
CqlDateTimeOperatorsTest.DateTimeComponentFrom.DateTimeComponentFromTimezone      Translation Error: Timezone keyword is only valid in 1.3 or lower
CqlIntervalOperatorsTest.Expand.ExpandPer1          Translation Error: Could not resolve call to operator Expand with signature (list<interval<System.Decimal>>,System.Integer).
CqlIntervalOperatorsTest.Expand.ExpandPer0D1        Translation Error: Could not resolve call to operator Expand with signature (list<interval<System.Integer>>,System.Decimal).

# Invalid Translation (translates, but translates wrong)
CqlAggregateTest.AggregateTests.RolledOutIntervals  CQL adds an integer to a date ("S + duration in days of X"). Should be "S + Quantity{ value: duration in days of X, unit: 'days' }". Translator translates it, but probably shouldn't.
CqlListOperatorsTest.IncludedIn.IncludedInNullRight Converts included in to in, which has different semantics when second argument is null

# Potentially Invalid Translation (translates, but potentially translates wrong)
CqlListOperatorsTest.IncludedIn.IncludedInNullLeft    Treats null as point overload, translating to "In" operator, which has different semantics (and different result)
CqlListOperatorsTest.Includes.IncludesNullRight       Treats null as point overload, translating to "Contains" operator, which has different semantics (and different result)

# Incorrect Expected Output
CqlDateTimeOperatorsTest.Add.DateTimeAddYearInWeeks             Wrong output: 2018-05-23 + 52 weeks should be 2019-05-22 (both dates should be Wednesdays)
CqlDateTimeOperatorsTest.Subtract.DateTimeSubtractYearInWeeks   Wrong output: 2018-05-23 - 52 weeks should be 2019-05-24 (both dates should be Wednesdays)
"CqlDateTimeOperatorsTest.Uncertainty tests.TimeDurationBetweenHourDiffPrecision2" Wrong output: Duration in hours between T06 and T07:00:00 should be Uncertainty[0, 1]
CqlIntervalOperatorsTest.Expand.ExpandPerHour                   Wrong output: This test is drawn directly from an example in the spec and yet expects a different answer! See: https://cql.hl7.org/09-b-cqlreference.html#expand
CqlIntervalOperatorsTest.In.TestInNullBoundaries                Wrong output: According to spec, comparison against null closed boundaries should result in true
CqlListOperatorsTest.Equal.EqualNullNull                        Wrong output: According to spec, if either list contains a null, the result is null
CqlListOperatorsTest.Sort                                       Wrong output: Queries return distinct lists by default; need to use "all" to retain duplicates

# Potentially Incorrect Expected Output
CqlDateTimeOperatorsTest.Subtract.DateTimeSubtract1YearInSeconds  Spec says to convert more precise duration to most precise unit in Date. How do you convert seconds to months? 31535999 is 364.999 days, which isn't quite 12 months, so we answer 2015-06.
"CqlStringOperatorsTest.toString tests.DateTimeToString2"         Answer does not include timezone offset, but default offset depends on test environment
CqlTypeOperatorsTest.Convert.StringToDateTime                     Answer does not include timezone offset, but default offset depends on test environment
CqlTypeOperatorsTest.ToDateTime.ToDateTime1                       Answer does not include timezone offset, but default offset depends on test environment
CqlTypeOperatorsTest.ToDateTime.ToDateTime2                       Answer does not include timezone offset, but default offset depends on test environment
CqlTypeOperatorsTest.ToDateTime.ToDateTime3                       Answer does not include timezone offset, but default offset depends on test environment
CqlTypesTest.DateTime.DateTimeNull                                Should DateTime(null) really evaluate to null?

# Incorrect answer

CqlComparisonOperatorsTest.Equal.DateTimeEqNull                 Wrong answer (true vs null - due to not evaluating DateTime(null) as null)
CqlIntervalOperatorsTest.Collapse.TestCollapseNull              Wrong answer (Interval(null, null) vs null)
CqlIntervalOperatorsTest.Except.NullInterval                    Wrong answer (Interval(null, null) vs null)
CqlIntervalOperatorsTest.Intersect.TestIntersectNull            Wrong answer (Interval[5, 10] vs Interval[5, null))
CqlListOperatorsTest.Includes.IncludesListNullAndListNull       Wrong answer (List Incudes List now treats nulls as equal)
CqlListOperatorsTest.IncludedIn.IncludedInListNullAndListNull   Wrong answer (List Incuded In List now treats nulls as equal)
ValueLiteralsAndSelectors.Decimal.Decimal10Pow28ToZeroOneStepDecimalMaxValue    Wrong answer (null vs big number)
ValueLiteralsAndSelectors.Decimal.DecimalPos10Pow28ToZeroOneStepDecimalMaxValue Wrong answer (null vs big number)
ValueLiteralsAndSelectors.Decimal.DecimalNeg10Pow28ToZeroOneStepDecimalMinValue Wrong answer (null vs big number)

# Incorrect answer due to inability to distinguish integer and decimal for whole numbers (e.g., 1.0)

CqlArithmeticFunctionsTest.Predecessor.PredecessorOf1D      Wrong answer (doesn't recognize 1.0 as decimal)
CqlArithmeticFunctionsTest.Predecessor.PredecessorOf1QCM    Wrong answer (doesn't recognize 1.0 as decimal)
CqlArithmeticFunctionsTest.Successor.SuccessorOf1D          Wrong answer (doesn't recognize 1.0 as decimal)
CqlIntervalOperatorsTest.Except.DecimalIntervalExcept1to3   (Sort of) wrong answer (is open 4 end boundary 3 or 3.99999999?)
CqlIntervalOperatorsTest.Except.QuantityIntervalExcept1to4  (Sort of) wrong answer (is open 5 end boundary 4 or 4.99999999?)
ValueLiteralsAndSelectors.Decimal.Decimal2Pow31             Overflows because it thinks it is an integer
ValueLiteralsAndSelectors.Decimal.DecimalPos2Pow31          Overflows because it thinks it is an integer
ValueLiteralsAndSelectors.Decimal.Decimal2Pow31ToInf1       Overflows because it thinks it is an integer
ValueLiteralsAndSelectors.Decimal.DecimalPos2Pow31ToInf1    Overflows because it thinks it is an integer
ValueLiteralsAndSelectors.Decimal.DecimalNeg2Pow31ToInf1    Underflows because it thinks it is an integer

# Unimplemented

CqlArithmeticFunctionsTest.HighBoundary                 HighBoundary not implemented
CqlArithmeticFunctionsTest.LowBoundary                  LowBoundary not implemented
CqlArithmeticFunctionsTest.Precision.PrecisionDecimal   Precision for Decimal not implemented
CqlIntervalOperatorsTest.PointFrom                      PointFrom not implemented
CqlIntervalOperatorsTest.ProperContains                 ProperContains not implemented
CqlIntervalOperatorsTest.ProperIn                       ProperIn not implemented
CqlListOperatorsTest.Descendents                        Descendents not implemented
CqlListOperatorsTest.ProperContains                     ProperContains not implemented
CqlListOperatorsTest.ProperIn                           ProperIn not implemented
CqlListOperatorsTest.ProperlyIncludedIn.ProperlyIncludedInNulRight  ProperIn not implemented

# Unimplemented (New in CQL 1.5)

CqlAggregateFunctionsTest.Product.ProductLong                         Long not implemented
CqlAggregateFunctionsTest.Sum.SumTestLong                             Long not implemented
CqlArithmeticFunctionsTest.Abs.AbsLong                                Long not implemented
CqlArithmeticFunctionsTest.Add.Add1L1L                                Long not implemented
CqlArithmeticFunctionsTest.Add.Add1L2L                                Long not implemented
CqlArithmeticFunctionsTest.MinValue.LongMinValue                      Long not implemented
CqlArithmeticFunctionsTest.MaxValue.LongMaxValue                      Long not implemented
CqlArithmeticFunctionsTest.Modulo.Modulo4LBy2L                        Long not implemented
CqlArithmeticFunctionsTest.Multiply.Multiply1By1L                     Long not implemented
CqlArithmeticFunctionsTest.Multiply.Multiply2LBy3L                    Long not implemented
CqlArithmeticFunctionsTest.Negate.NegateNeg1L                         Long not implemented
CqlArithmeticFunctionsTest.Predecessor.PredecessorOf1L                Long not implemented
CqlArithmeticFunctionsTest.Power.Power2LTo2L                          Long not implemented
CqlArithmeticFunctionsTest.Power.Power2LTo3L                          Long not implemented
CqlArithmeticFunctionsTest.Subtract.Subtract1LAnd1L                   Long not implemented
CqlArithmeticFunctionsTest.Successor.SuccessorOf1L                    Long not implemented
"CqlArithmeticFunctionsTest.Truncated Divide.TruncatedDivide10LBy3L"  Long not implemented
CqlArithmeticFunctionsTest.Modulo.ModuloQuantity                      Modulo not implemented for Quantity
CqlArithmeticFunctionsTest.Modulo.Modulo10By3Quantity                 Modulo not implemented for Quantity
"CqlArithmeticFunctionsTest.Truncated Divide.TruncatedDivide10d1ByNeg3D1Quantity"     Truncated divide not implemented for Quantity
"CqlArithmeticFunctionsTest.Truncated Divide.TruncatedDivide10By5DQuantity"           Truncated divide not implemented for Quantity
"CqlArithmeticFunctionsTest.Truncated Divide.TruncatedDivide414By206DQuantity"        Truncated divide not implemented for Quantity
